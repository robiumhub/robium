{
  "name": "robium",
  "version": "1.0.0",
  "description": "Robium - Robot Development Platform",
  "scripts": {
    "dev": "./scripts/start-dev.sh",
    "start": "./scripts/start-dev.sh",
    "clean": "pkill -f 'npm run dev' || true && pkill -f 'npm start' || true && pkill -f 'ts-node-dev' || true && pkill -f 'react-scripts' || true",
    "kill-ports": "lsof -ti:3000 | xargs kill -9 2>/dev/null || true && lsof -ti:3001 | xargs kill -9 2>/dev/null || true && lsof -ti:8000 | xargs kill -9 2>/dev/null || true",
    "compose:down": "docker compose -f ./docker-compose.yml down --remove-orphans",
    "compose:db:up": "docker compose -f ./docker-compose.yml up -d database",
    "compose:db:wait": "docker compose -f ./docker-compose.yml exec -T database sh -c \"until pg_isready -U user -d robiumdb -h localhost -p 5432; do echo waiting for postgres; sleep 1; done\"",
    "compose:db:status": "docker compose -f ./docker-compose.yml run --rm -e DB_HOST=database -e DB_PORT=5432 -e DB_NAME=robiumdb -e DB_USER=user -e DB_PASSWORD=password backend npm run migrate:status",
    "compose:db:migrate": "docker compose -f ./docker-compose.yml run --rm -e DB_HOST=database -e DB_PORT=5432 -e DB_NAME=robiumdb -e DB_USER=user -e DB_PASSWORD=password backend npm run migrate:up",
    "compose:db:seed": "docker compose -f ./docker-compose.yml exec -T database psql -U user -d robiumdb -v ON_ERROR_STOP=1 -c \"INSERT INTO users (email, username, password_hash, role, is_active) VALUES ('admin@robium.dev','admin', '$2a$12$eyWPegMuuUxg.vaKCF5ybe8c9qpcfVWhHgBJzt90mIk7kM7IltwFq', 'admin', TRUE) ON CONFLICT (email) DO UPDATE SET password_hash = EXCLUDED.password_hash, role = 'admin', is_active = TRUE, updated_at = NOW(); INSERT INTO users (email, username, password_hash, role, is_active) VALUES ('test@robium.dev','test', '$2a$12$eyWPegMuuUxg.vaKCF5ybe8c9qpcfVWhHgBJzt90mIk7kM7IltwFq', 'user', TRUE) ON CONFLICT (email) DO UPDATE SET password_hash = EXCLUDED.password_hash, role = 'user', is_active = TRUE, updated_at = NOW();\"",
    "compose:db:reset": "npm run compose:down && npm run compose:db:up && npm run compose:db:wait && npm run compose:db:migrate && npm run compose:db:seed"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "typescript": "^4.9.5"
  }
}
