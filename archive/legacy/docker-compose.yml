services:
  frontend:
    build:
      context: .
      dockerfile: ./packages/frontend/Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - ./packages/frontend/src:/app/packages/frontend/src
      - ./packages/frontend/public:/app/packages/frontend/public
    env_file:
      - ./packages/frontend/.env
    environment:
      - NODE_ENV=development
      - FAST_REFRESH=false
      - BACKEND_URL=http://backend:8000
      - CHOKIDAR_USEPOLLING=false
      - WATCHPACK_POLLING=false
      - GENERATE_SOURCEMAP=false
    deploy:
      resources:
        limits:
          memory: 6G
        reservations:
          memory: 3G
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: ./packages/backend/Dockerfile
    ports:
      - '8000:8000'
    volumes:
      - ./packages/backend/src:/app/packages/backend/src
      - backend-sqlite-data:/app/packages/backend/generated
    env_file:
      - ./packages/backend/.env
    environment:
      - NODE_ENV=development
      - DB_CLIENT=sqlite
      - SQLITE_DIR=/app/packages/backend/generated
    depends_on:
      - ros-container

  # Using SQLite database (embedded in backend container)

  ros-container:
    build:
      context: ./ros
      dockerfile: Dockerfile
    # Add other ROS-specific configurations here
    # (e.g., volumes, environment variables, command)
    # This service is a placeholder for now.

volumes:
  backend-sqlite-data:
